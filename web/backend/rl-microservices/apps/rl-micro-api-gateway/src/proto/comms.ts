// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v5.28.1
// source: proto/comms.proto

/* eslint-disable */
import {GrpcMethod, GrpcStreamMethod} from '@nestjs/microservices';
import {Observable} from 'rxjs';

export const protobufPackage = 'comms';

export interface GetPublicApplicationMessagesDto {
  email: string;
}

export interface ApplicationMessageDto {
  id: string;
  createdByEmail: string;
  createdByUserId: string;
  isShow: boolean;
  isPublic: boolean;
  title: string;
  message: string;
  severity: string;
  routerLink?: string | undefined;
  routerLinkText?: string | undefined;
  createdAt: string;
  updatedAt: string;
}

export interface ApplicationMessageDtos {
  messages: ApplicationMessageDto[];
}

export const COMMS_PACKAGE_NAME = 'comms';

export interface CommsServiceClient {
  getPublicApplicationMessages(
    request: GetPublicApplicationMessagesDto,
  ): Observable<ApplicationMessageDtos>;
}

export interface CommsServiceController {
  getPublicApplicationMessages(
    request: GetPublicApplicationMessagesDto,
  ):
    | Promise<ApplicationMessageDtos>
    | Observable<ApplicationMessageDtos>
    | ApplicationMessageDtos;
}

export function CommsServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['getPublicApplicationMessages'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('CommsService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('CommsService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const COMMS_SERVICE_NAME = 'CommsService';
